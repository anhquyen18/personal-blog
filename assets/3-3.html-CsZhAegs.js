import{_ as e,a as t,b as s,c as a,d as i,e as n,f as o,g as r,h as l,i as c,j as p,k as d,l as g,m as u,n as m,o as h,p as k,q as f,r as y,s as B,t as b,u as v,v as C,w as E,x as _,y as A,z as F,A as w,B as x,C as S}from"./iam-3_30-Qp1PZc1i.js";import{_ as q}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as z,o as D,e as P}from"./app-BDQXVHS9.js";const I={},T=P('<p>In the previous, step we granted minimum permissions to a user to be able to create EC2. Suppose, we carelessly grant stop instance permission to the user. Users can stop the instance and cause the application to be interrupted, causing unpredictable damage. I once read an article about a young man who, after quitting his job, somehow deleted a series of servers, causing tens of thousands of dollars in damage to the company. So how can we prevent that?</p><p>There are many ways to prevent the above problem, here I will use one of the simple ways which use EventBridge and Lambda to prevent users from stopping the instance.</p><h3 id="create-iam-role-for-lambda" tabindex="-1"><a class="header-anchor" href="#create-iam-role-for-lambda"><span>Create IAM Role for Lambda</span></a></h3><p>First we will create an execution role for lamda function that can perform actions on the EC2 instance.</p><p>In the Admin account, we open the <a href="https://console.aws.amazon.com/iam" target="_blank" rel="noopener noreferrer">AWS IAM</a> console.</p><ol><li>Select <strong>Policies</strong>, click <strong>Create policy</strong>.</li></ol><figure><img src="'+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>Select <strong>JSON</strong>, add json code to <strong>Policy editor</strong>.</li></ol><p>This policy allows the lambda function to create logs and start instances.</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">  &quot;Version&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;2012-10-17&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">  &quot;Statement&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Effect&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;Allow&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Action&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: [</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;logs:CreateLogGroup&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;logs:CreateLogStream&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;logs:PutLogEvents&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Resource&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;arn:aws:logs:*:*:*&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Effect&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;Allow&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Action&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: [</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;ec2:Start*&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#E06C75;">      &quot;Resource&quot;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;*&quot;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>Scroll down and click <strong>Next</strong>.</li></ol><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><p>Enter parameter.</p><ul><li>Policy name: <em>EC2Protect</em>.</li><li>Description: <em>Protected instance stopped</em>.</li></ul></li></ol><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li>Review permissons, then click <strong>Create policy</strong>.</li></ol><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li>Switch to <strong>Roles</strong>, click <strong>Create role</strong>.</li></ol><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="7"><li><p>Select <strong>AWS service</strong>.</p><ul><li>Use case: <em>Lambda</em>.</li><li>Click <strong>Next</strong>.</li></ul></li></ol><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="8"><li>Search for created policy <em>EC2Protect</em>. Click <strong>Next</strong>.</li></ol><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="9"><li>Enter role name <em>EC2ProtectRole</em>.</li></ol><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="10"><li>Review permissions, then click <strong>Create role</strong>.</li></ol><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>After the execution role creation for the lambda function, we create a lamda function to perform actions to protect the EC2 instance whenever we get an event that changes the state of the EC2 instance.</p><h3 id="create-lambda-function" tabindex="-1"><a class="header-anchor" href="#create-lambda-function"><span>Create lambda function</span></a></h3><p>In <a href="https://console.aws.amazon.com/lambda" target="_blank" rel="noopener noreferrer">Lambda</a> console.</p><ol><li>Click <strong>Create function</strong></li></ol><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p>Select <strong>Author from scratch</strong>.</p><ul><li>Function name: <em>EC2Protect</em>.</li><li>Runtime: <em>Python 3.12</em> (Python version may be changed in the future).</li></ul></li></ol><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li><p>Select <strong>Change default execution role</strong>, select <strong>Use an existing role</strong>.</p><ul><li>Select the role we just created <strong>EC2ProtectRole</strong>.</li><li>Finally select <strong>Create function</strong>.</li></ul></li></ol><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li>Create lamda function successfully.</li></ol><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li><p>Scroll down <strong>Code source</strong>.</p><ul><li>Add python code.</li><li>Click <strong>Deploy</strong>.</li></ul></li></ol><p>This lambda function will receive EC2 instance state notification from EventBridge and then start that EC2 instance.</p><div class="language-py line-numbers-mode" data-ext="py" data-title="py"><pre class="shiki shiki-themes github-light one-dark-pro vp-code" style="background-color:#fff;--shiki-dark-bg:#282c34;color:#24292e;--shiki-dark:#abb2bf;" tabindex="0"><code><span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> boto3</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">import</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">region </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#032F62;--shiki-dark:#98C379;"> &#39;ap-southeast-1&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">ec2 </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> boto3.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">client</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;ec2&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">region_name</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> region)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#C678DD;">def</span><span style="color:#6F42C1;--shiki-dark:#61AFEF;"> lambda_handle</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">event</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">,</span><span style="color:#24292E;--shiki-dark:#D19A66;font-style:inherit;--shiki-dark-font-style:italic;">context</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#56B6C2;">    print</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&quot;Received event: &quot;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> json.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">dumps</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(event))</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    instances </span><span style="color:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> [event[</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;detail&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">][</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;instance-id&#39;</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">]]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#ABB2BF;">    ec2.</span><span style="color:#24292E;--shiki-dark:#61AFEF;">start_instances</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#E36209;--shiki-dark:#E06C75;font-style:inherit;--shiki-dark-font-style:italic;">InstanceIds</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="color:#24292E;--shiki-dark:#ABB2BF;"> instances)</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#56B6C2;">    print</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="color:#032F62;--shiki-dark:#98C379;">&#39;Protected instance stopped - starting up instance: &#39;</span><span style="color:#D73A49;--shiki-dark:#56B6C2;"> +</span><span style="color:#005CC5;--shiki-dark:#56B6C2;"> str</span><span style="color:#24292E;--shiki-dark:#ABB2BF;">(instances))</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>The lambda function has been created.</p><h3 id="create-eventbridge" tabindex="-1"><a class="header-anchor" href="#create-eventbridge"><span>Create EventBridge</span></a></h3><p>Open <a href="https://console.aws.amazon.com/events" target="_blank" rel="noopener noreferrer">Amazon EventBridge</a> console.</p><ol><li>Select <em>Buses - Rules</em>.</li></ol><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li><p>Enter rule name <em>ProtectRule</em>.</p><ul><li>Select <strong>Rule with an event parttern</strong>.</li><li>Click <strong>Next</strong>.</li></ul></li></ol><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>Scroll down and select <strong>Use pattern form</strong>.</li></ol><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li><p>Configure Event parttern.</p><ul><li>Event source: Select <strong>AWS services</strong>.</li><li>AWS services: Select <strong>EC2</strong>.</li><li>Event type: Select <strong>EC2 Instance State-change Notification</strong>.</li><li>Event Type Specification 1: <strong>Specific state(s)</strong>, select <strong>stopped</strong> state.</li><li>Event Type Specification 2: <strong>Specific instance Id(s)</strong>, enter instance Id <em>test-user</em> we created in the previous example or any running instance you want.</li></ul></li></ol><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li>Scroll down, click <strong>Next</strong>.</li></ol><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li><p>Configure target.</p><ul><li>Select a target: Select <strong>Lambda function</strong>.</li><li>Select lambda function we created in the previous step <strong>EC2Protect</strong>.</li><li>Then click <strong>Next</strong>.</li></ul></li></ol><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="7"><li>We will not need to create tags. Click <strong>Next</strong>.</li></ol><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="8"><li>Review configuration. Click <strong>Create rule</strong>.</li></ol><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="9"><li>Create <strong>ProtectRule</strong> successfully.</li></ol><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="test" tabindex="-1"><a class="header-anchor" href="#test"><span>Test</span></a></h3><p>We will test the ability to prevent the EC2 instance we just created from being stopped.</p><p>In <a href="https://console.aws.amazon.com/ec2" target="_blank" rel="noopener noreferrer">EC2</a> console.</p><ol><li>Right-click <em>test-ec2</em>, select <strong>Stop instance</strong>.</li></ol><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>The instance will enter the stopped state and then be restarted immediately.</li></ol><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+F+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>We can check the log of the lambda function <strong>EC2Protect</strong> in <a href="https://console.aws.amazon.com/cloudwatch" target="_blank" rel="noopener noreferrer">CloudWatch</a></li></ol><p>Select logs group <em>EC2Protect</em>.</p><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li>Select the latest logs.</li></ol><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li>We can see the entire process of the lambda function here.</li></ol><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>So we have prevented the risk of shutting down the server when accidentally granting excessive permissions to the user. Here, I use the admin user to test. To be more detailed, you can add the action <em>ec2:StopInstances</em> to the created policy in the previous example and use <em>dev-user-01</em> to test.</p>',79),R=[T];function W(j,N){return D(),z("div",null,R)}const O=q(I,[["render",W],["__file","3-3.html.vue"]]),Z=JSON.parse('{"path":"/en/posts/AWS/prevent-security-risks/access-control/3-3.html","title":"3.3 Prevent EC2 instance from being stopped","lang":"en-US","frontmatter":{"date":"2024-06-24T00:00:00.000Z","article":false,"title":"3.3 Prevent EC2 instance from being stopped","next":"/en/posts/AWS/prevent-security-risks/part4","lastUpdated":true,"category":["AWS"],"tag":["Security","Organization","IAM","EventBridge","Budget","Guide"],"description":"In the previous, step we granted minimum permissions to a user to be able to create EC2. Suppose, we carelessly grant stop instance permission to the user. Users can stop the in...","head":[["link",{"rel":"alternate","hreflang":"vi-vn","href":"https://www.linkedin.com/in/anh-quyen-tran-188394216/personal-blog/posts/AWS/prevent-security-risks/access-control/3-3.html"}],["meta",{"property":"og:url","content":"https://www.linkedin.com/in/anh-quyen-tran-188394216/personal-blog/en/posts/AWS/prevent-security-risks/access-control/3-3.html"}],["meta",{"property":"og:site_name","content":"Tran Anh Quyen"}],["meta",{"property":"og:title","content":"3.3 Prevent EC2 instance from being stopped"}],["meta",{"property":"og:description","content":"In the previous, step we granted minimum permissions to a user to be able to create EC2. Suppose, we carelessly grant stop instance permission to the user. Users can stop the in..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://www.linkedin.com/in/anh-quyen-tran-188394216/personal-blog/storage/prevent-security-risks/iam-3_1.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"vi-VN"}],["meta",{"property":"og:updated_time","content":"2024-07-02T08:40:48.000Z"}],["meta",{"property":"article:author","content":"Tran Anh Quyen"}],["meta",{"property":"article:tag","content":"Security"}],["meta",{"property":"article:tag","content":"Organization"}],["meta",{"property":"article:tag","content":"IAM"}],["meta",{"property":"article:tag","content":"EventBridge"}],["meta",{"property":"article:tag","content":"Budget"}],["meta",{"property":"article:tag","content":"Guide"}],["meta",{"property":"article:published_time","content":"2024-06-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-02T08:40:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"3.3 Prevent EC2 instance from being stopped\\",\\"description\\":\\"In the previous, step we granted minimum permissions to a user to be able to create EC2. Suppose, we carelessly grant stop instance permission to the user. Users can stop the in...\\"}"]]},"headers":[{"level":3,"title":"Create IAM Role for Lambda","slug":"create-iam-role-for-lambda","link":"#create-iam-role-for-lambda","children":[]},{"level":3,"title":"Create lambda function","slug":"create-lambda-function","link":"#create-lambda-function","children":[]},{"level":3,"title":"Create EventBridge","slug":"create-eventbridge","link":"#create-eventbridge","children":[]},{"level":3,"title":"Test","slug":"test","link":"#test","children":[]}],"git":{"createdTime":1719909648000,"updatedTime":1719909648000,"contributors":[{"name":"Pai18","email":"anhquyen18092000@gmail.com","commits":1}]},"readingTime":{"minutes":2.9,"words":869},"filePathRelative":"en/posts/AWS/prevent-security-risks/access-control/3-3.md","localizedDate":"June 24, 2024","excerpt":"<p>In the previous, step we granted minimum permissions to a user to be able to create EC2. Suppose, we carelessly grant stop instance permission to the user. Users can stop the instance and cause the application to be interrupted, causing unpredictable damage. I once read an article about a young man who, after quitting his job, somehow deleted a series of servers, causing tens of thousands of dollars in damage to the company. So how can we prevent that?</p>","autoDesc":true}');export{O as comp,Z as data};
